apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'signing'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    buildTypes {
        defaultConfig {
            minSdkVersion rootProject.ext.minSdkVersion
            targetSdkVersion rootProject.ext.targetSdkVersion
            versionCode rootProject.ext.versionCodeLibrary
            versionName rootProject.ext.versionNameLibrary
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}


dependencies {
    compile 'com.google.android.gms:play-services-location:8.4.0'
    compile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    provided 'io.reactivex:rxjava:1.0.14'
    provided 'io.reactivex:rxandroid:1.0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.robolectric:robolectric-shadows:3.0'
    testCompile 'org.mockito:mockito-core:1.9.5'
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}


android.libraryVariants
publishing {
    publications {
        maven(MavenPublication) {
            artifact "build/libs/SmartLocation-${rootProject.ext.versionNameLibrary}.aar"
            artifactId 'library'
        }
    }
}

def isReleaseBuild() {
    return rootProject.ext.versionNameLibrary.contains("SNAPSHOT") == false
}

signing {
    required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: sonatypeRepo) {
            authentication(userName: sonatypeUsername,
                    password: sonatypePassword)
        }
        snapshotRepository(url: sonatypeSnapshotRepo) {
            authentication(userName: sonatypeUsername,
                    password: sonatypePassword)
        }

        pom.project {
            name 'Smart Location Library'
            packaging 'aar'
            description 'This library handles all the boilerplate and repetitive code used when playing with Locations in Android projects.'
            url 'https://github.com/mrmans0n/smart-location-lib'
            artifactId 'library'

            scm {
                url 'scm:git@github.com:mrmans0n/smart-location-lib.git'
                connection 'scm:git@github.com:mrmans0n/smart-location-lib.git'
                developerConnection 'scm:git@github.com:mrmans0n/smart-location-lib.git'
            }

            licenses {
                license {
                    name 'MIT license'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'mrmans0n'
                    name 'Nacho Lopez'
                    email 'nacho@nlopez.io'
                }
            }
        }
    }
}
